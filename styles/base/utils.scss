/*
###################################################
# Resets
###################################################
*/

@mixin reset {
  margin: 0;
  padding: 0;
}

@mixin resetList {
  margin: 0;
  padding: 0;
  & li {
    list-style-type: none;
  }
}

/*
###################################################
# Grid
###################################################
*/

@mixin isGrid($count, $gap: none) {
  display: grid;
  grid-template-columns: repeat($count, [col-start] 1fr);
  grid-gap: $gap;
  & * {
    grid-column: col-start / span $count;
  }
}

/*
###################################################
# Aliases
###################################################
*/

@mixin animate($timing, $method: "") {
  transition: all $timing $method;
  -webkit-transition: all $timing $method;
  -moz-transition: all $timing $method;
}
@mixin border($color) {
  border: 1px dotted $color;
}

/*
###################################################
# Responsive
###################################################
*/

$breakpoints: (
  null: 0,
  sm: 640px,
  md: 768px,
  lg: 1024px,
  xl: 1280px,
);

@mixin sm-md {
  @media screen and (min-width: 641px) and (max-width: 768px) {
    @content;
  }
}
@mixin md-lg {
  @media screen and (min-width: 769px) and (max-width: 1024px) {
    @content;
  }
}
@mixin lg-xl {
  @media screen and (min-width: 1025px) and (max-width: 1280px) {
    @content;
  }
}
@mixin xl {
  @media screen and (min-width: 1281px) {
    @content;
  }
}

@mixin respond-to($point) {
  @if map-has-key($breakpoints, $point) {
    $value: map-get($breakpoints, $point);
    @media screen and (min-width: $value) {
      @content;
    }
  }
}

@mixin range($min, $max) {
  @media screen and (min-width: $min) and (max-width: $max) {
    @content;
  }
}

@mixin hide-at-point($point) {
  @if map-has-key($breakpoints, $point) {
    $value: map-get($breakpoints, $point);
    @media screen and (min-width: $value) {
      display: none;
    }
  }
}

@mixin showBreaks {
  background: url("/static/sm.png") left 60px no-repeat;
  background-attachment: fixed;
  @include sm-md {
    background: url("/static/sm-md.png") left 60px no-repeat;
    background-attachment: fixed;
  }
  @include md-lg {
    background: url("/static/md-lg.png") left 60px no-repeat;
    background-attachment: fixed;
  }
  @include lg-xl {
    background: url("/static/lg-xl.png") left 60px no-repeat;
    background-attachment: fixed;
  }
  @include xl {
    background: url("/static/xl-up.png") left 60px no-repeat;
    background-attachment: fixed;
  }
}

/*
###################################################
# Colors
###################################################
*/

$theme-colors: (
  "transparent": transparent,
  "black": #444,
  "white": #fff,
  "coral": #fe7c69,
  "admiral": #3b4868,
  "scrub": #00d6b3,
  "sky": #3391f3,
  "hull": #767A84,
  "midcentury": #e7cb69,
  "funnies": #efceb9,
  "belaire": #b0e0e6,
  "fog": #f1f7f8,
  "hyperlink": #005ec0,
  "gray": #666,
);

/*
###################################################
# Type Utilities
###################################################
*/

$scale: (
  8: 8px,
  12: 12px,
  15: 15px,
  16: 16px,
  18: 18px,
  20: 20px,
  24: 24px,
  28: 28px,
  32: 32px,
);

$heights: (
  "i": inherit,
  "s": 150%,
  "m": 200%,
  "l": 250%,
  "xl": 300%,
);

.align-left {
  text-align: left;
}
.align-right {
  text-align: right;
}
.align-center {
  text-align: center;
}
.strip-margin {
  margin: 0;
}
.pad-bottom {
  margin-bottom: 1rem;
}
.hide-for-small {
  @media screen and (max-width: map-get($breakpoints, sm)) {
    display: none;
  }
}
.hide-for-medium {
  @media screen and (max-width: map-get($breakpoints, md)) {
    display: none;
  }
}
.hide-for-large {
  @media screen and (max-width: map-get($breakpoints, lg)) {
    display: none;
  }
}
.hide-for-xlarge {
  @media screen and (max-width: map-get($breakpoints, xl)) {
    display: none;
  }
}
